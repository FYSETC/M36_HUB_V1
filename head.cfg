## M36 HUB V1.1 Lite （with GC6609）
## For more info 
## https://github.com/FYSETC/M36_HUB_V1
## https://wiki.fysetc.com/M36_HUB_V1/

# This file contains common pin mappings for the Fysetc M36 HUB V1.1
# To use this config, the firmware should be compiled for the
# STM32F072 with "No bootloader" ,"Internal clock" and Communication interface USB

# How to get in DFU mode:
# 1. hold BT0 button for 2 seconds
# 2. Hold RST button for 2 seconds
# 3. Release the BT0 button
# 4. wait 2seconds
# 5. Release the RST button
# "lsusb" check if get in DFU mode

# After running "make", run the following command to flash the board:
# "dfu-util -R -a 0 -s 0x08000000:leave -D out/klipper.bin" to upload
# or "make flash FLASH_DEVICE=0483:df11" compile and upload at once.


## *** THINGS TO CHANGE/CHECK: ***
## MCU path                                                                     [mcu] section
## Z and Extruder motor currents                                                [tmc2208 stepper_*] sections. Uncomment the stepper motor you have
## Full steps per rotation for Extruder                                         [extruder] section
## Thermistor types                                                             [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Extruder motor currents                                                      [extruder] section
## PID tune                                                                     [extruder] and [heater_bed] sections
## Fine tune E steps                                                            [extruder] section

## For more info                                                                check https://docs.vorondesign.com/build/startup/#v0
## See docs/Config_Reference.md for a description of parameters.

[mcu head]
serial: /dev/serial/by-path/platform-4101000.usb-usb-0:1.4:1.0
#restart_method: command


#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: head:PB15
dir_pin: head:PB14	                # Add ! if moving opposite direction
enable_pin: !head:PB1
full_steps_per_rotation: 200    # Set to 200 for 1.8 degree motor, set to 400 for 0.9 degree stepper motor
rotation_distance: 22.23        # See calibrating rotation_distance on extruders doc
gear_ratio: 50:10               # For Mini Afterburner
microsteps: 32
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: head:PA0
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: Generic 3950
sensor_pin: head:PA1
control: pid            # Do PID calibration
pid_Kp: 28.182
pid_Ki: 1.978
pid_Kd: 100.397
min_temp: 0
max_temp: 270
min_extrude_temp: 10  # set 10 to test,please change to 170 for real use
max_extrude_only_distance: 150
max_extrude_cross_section: 1.5
pressure_advance: 0.2   # See tuning pressure advance doc
pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
uart_pin: head:PA9
interpolate: False
run_current: 0.7
diag_pin: head:PA8   
sense_resistor: 0.220
stealthchop_threshold: 0                                            # Set to 0 for spreadcycle, avoid using stealthchop on extruder


#####################################################################
# Fan Control
#####################################################################
#FAN0_EN:PB11
#FAN0_PWM:PB10
#FAN0_TACH:PB12

#FAN1_EN:PB4
#FAN1_PWM:PA15
#FAN1_TACH:PB3

#FAN2_EN:PB9
#FAN2_PWM:PB8
#FAN2_TACH:PA10

[heater_fan hotend_fan]
pin:head:PB4
max_power:1.0
shutdown_speed:0.0
cycle_time:0.5
hardware_pwm:false
kick_start_time:0.10
off_below:0.1
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

[multi_pin part_cooling]
pins: head:PB9,head:PB11

[fan]
pin: multi_pin:part_cooling

#####################################################################
# Temperature Sensor
#####################################################################

[temperature_sensor head_mcu_temp]
sensor_type: temperature_mcu
sensor_mcu: head
min_temp: 0
max_temp: 100

[temperature_sensor Chamber_on_M36]
sensor_type: EPCOS 100K B57560G104F
sensor_pin: head:PA2
min_temp: 0
max_temp: 100

#####################################################################
# Neopixel
#####################################################################

[neopixel left_rgb]     
pin: head:PB13
chain_count: 1
color_order: GRB
initial_RED: 0.1
initial_GREEN: 0.1
initial_BLUE: 0.1

[neopixel right_rgb]
pin: head:PB0
chain_count: 1
color_order: GRB
initial_RED: 0.1
initial_GREEN: 0.1
initial_BLUE: 0.1

# If you want the LEDs on both sides to be synchronized, you can also use multi_pin to configure it.
# [multi_pin rgb]
# pins: head:PB0,head:PB13
# [neopixel rgb]
# pin: multi_pin:RGB
# chain_count: 1
# color_order: GRB
# initial_RED: 0.9
# initial_GREEN: 0.9
# initial_BLUE: 0.9

#####################################################################
#   ADXL345
#####################################################################

[adxl345]
cs_pin: head:PA4
#   The SPI enable pin for the sensor. This parameter must be provided.
#spi_speed: 5000000
#   The SPI speed (in hz) to use when communicating with the chip.
#   The default is 5000000.
spi_bus: spi1
#spi_software_sclk_pin:PA5
#spi_software_mosi_pin:PA7
#spi_software_miso_pin:PA6
#   See the "common SPI settings" section for a description of the
#   above parameters.
axes_map: -x, z, y
#   The accelerometer axis for each of the printer's X, Y, and Z axes.
#   This may be useful if the accelerometer is mounted in an
#   orientation that does not match the printer orientation. For
#   example, one could set this to "y, x, z" to swap the X and Y axes.
#   It is also possible to negate an axis if the accelerometer
#   direction is reversed (eg, "x, z, -y"). The default is "x, y, z".
rate: 3200
#   Output data rate for ADXL345. ADXL345 supports the following data
#   rates: 3200, 1600, 800, 400, 200, 100, 50, and 25. Note that it is
#   not recommended to change this rate from the default 3200, and
#   rates below 800 will considerably affect the quality of resonance
#   measurements.

[resonance_tester]
accel_chip: adxl345
accel_per_hz: 75  # default is 75
probe_points:
    60, 60, 20  # an example

[input_shaper]
shaper_freq_x: 66
shaper_type_x: ei
shaper_freq_y: 70.8
shaper_type_y: mzv

[menu __main __octoprint]
type: disabled


